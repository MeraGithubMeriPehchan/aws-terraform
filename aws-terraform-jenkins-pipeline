pipeline {
    agent any
    tools {
        terraform 'terraform@local'
    }

    stages {
        stage('Checkout') {
            steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/MeraGithubMeriPehchan/aws-terraform.git']]])            

          }
        }
        
        stage ("terraform init") {
            steps {
                bat 'C:\\Program Files\\TerraForm\\terraform init' 
            }
        }
        
        stage ("terraform Plan") {
            steps {
                echo "Terraform Plan"
                withCredentials([usernamePassword(credentialsId: 'DevSecOps_AWS_Key', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                bat 'C:\\Program Files\\TerraForm\\terraform plan -var-file="vars/dev-east-1.tfvars"'
                }
            }
        }
        
        stage ("terraform Apply") {
            steps {
                echo "Terraform Apply}"
                withCredentials([usernamePassword(credentialsId: 'DevSecOps_AWS_Key', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                    bat 'C:\\Program Files\\TerraForm\\terraform apply -var-file="vars/dev-east-1.tfvars" --auto-approve' 
                    sleep 120
                }
           }
        }
        
        stage ("terraform Destroy") {
            steps {
                echo "Terraform Destroy}"
                withCredentials([usernamePassword(credentialsId: 'DevSecOps_AWS_Key', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                    bat 'C:\\Program Files\\TerraForm\\terraform destroy -var-file="vars/dev-east-1.tfvars" --auto-approve' 
                }
           }
        }
    }
}
